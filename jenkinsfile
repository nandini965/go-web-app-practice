pipeline {
agent any
stages {
stage('npm install') {
steps {
 sh 'npm install'
}
}
stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.109.206.229:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar-cred', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
      }
 stage ('docker build and run') {
 environment {
         DOCKER_IMAGE = "nandini965/go-web-app-cicd:${BUILD_NUMBER}"
         REGISTRY_CREDENTIALS = credentials('dockerhub-cred')
       }
 steps {
  script {
             sh  'docker build -t ${DOCKER_IMAGE} .'
             def dockerImage = docker.image("${DOCKER_IMAGE}")
             docker.withRegistry('https://index.docker.io/v1/', "dockerhub-cred") {
                 dockerImage.push()
             }
 }
 }
    }
   stage('Update Deployment File') {
           environment {
               GIT_REPO_NAME = "go-web-app-practice"
               GIT_USER_NAME = "nandini965"
           }
           steps {
               withCredentials([string(credentialsId: 'github-cred', variable: 'GITHUB_TOKEN')]) {
                   sh '''
                       git config user.email "nandhinigoud965@gmail.com"
                       git config user.name "nandini965"
                       BUILD_NUMBER=${BUILD_NUMBER}
                       sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" k8s/manifests/deployment.yml
                       git add k8s/manifests/deployment.yml
                       git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                       git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                   '''
               }
           }

}
}
}